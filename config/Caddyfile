{
	# 全局配置
	email {$ACME_EMAIL}
	# 开发环境使用本地CA
	local_certs
	# 跳过证书验证安装提示
	skip_install_trust
}

# HTTPS with self-signed certificate (port 443) - 支持所有访问方式
# 支持localhost、127.0.0.1和局域网IP访问
https://localhost:443, https://127.0.0.1:443, https://10.126.126.9:443, https://:443 {
	tls /etc/caddy/certs/cert.pem /etc/caddy/certs/key.pem
	encode zstd gzip

	# 1. 健康检查端点（最高优先级）
	handle /health {
		respond "healthy" 200
	}

	# 2. API 路由 -> Backend（第二优先级）
	handle /api/* {
		reverse_proxy axongate-server:8080 {
			header_up X-Real-IP {remote_host}
		}
	}

	# 3. AI 引擎路由 -> Engine（第三优先级）
	handle /v1/* {
		reverse_proxy axongate-engine:8090 {
			header_up X-Real-IP {remote_host}

			# 流式响应优化
			flush_interval 1s
			stream_timeout 30m
		}
	}

	# 4. 静态文件服务（最后处理）
	handle {
		root * /srv
		
		# 静态资源缓存策略
		@static path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
		header @static Cache-Control "public, max-age=2592000, immutable"
		
		# HTML 文件不缓存
		@html path *.html
		header @html Cache-Control "no-cache, no-store, must-revalidate"
		header @html Pragma "no-cache"
		header @html Expires "0"
		
		try_files {path} /index.html
		file_server
	}

	# 安全头
	header {
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"
	}

	# JSON 格式日志
	log {
		output stdout
		format json
	}
}

# 生产环境：域名配置（自动 HTTPS）
{$DOMAIN:ai.example.com} {
	encode zstd gzip

	# 1. 健康检查端点（最高优先级）
	handle /health {
		respond "healthy" 200
	}

	# 2. API 路由 -> Backend（第二优先级）
	handle /api/* {
		reverse_proxy axongate-server:8080 {
			header_up X-Real-IP {remote_host}
		}
	}

	# 3. AI 引擎路由 -> Engine（第三优先级）
	handle /v1/* {
		reverse_proxy axongate-engine:8090 {
			header_up X-Real-IP {remote_host}

			# 流式响应优化
			flush_interval 1s
			stream_timeout 30m
		}
	}

	# 4. 静态文件服务（最后处理）
	handle {
		root * /srv
		
		# 静态资源缓存策略
		@static path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
		header @static Cache-Control "public, max-age=2592000, immutable"
		
		# HTML 文件不缓存
		@html path *.html
		header @html Cache-Control "no-cache, no-store, must-revalidate"
		header @html Pragma "no-cache"
		header @html Expires "0"
		
		try_files {path} /index.html
		file_server
	}

	# 安全头
	header {
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"
	}

	# JSON 格式日志
	log {
		output stdout
		format json
	}
}

# 本地调试环境（HTTP，无需证书）
:8080 {
	encode zstd gzip

	# 1. 健康检查端点（最高优先级）
	handle /health {
		respond "healthy" 200
	}

	# 2. API 路由 -> Backend（第二优先级）
	handle /api/* {
		reverse_proxy axongate-server:8080 {
			header_up X-Real-IP {remote_host}
		}
	}

	# 3. AI 引擎路由 -> Engine（第三优先级）
	handle /v1/* {
		reverse_proxy axongate-engine:8090 {
			header_up X-Real-IP {remote_host}

			# 流式响应优化
			flush_interval 1s
			stream_timeout 30m
		}
	}

	# 4. 静态文件服务（最后处理）
	handle {
		root * /srv
		
		# 缓存策略（与生产环境一致）
		@static path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
		header @static Cache-Control "public, max-age=2592000, immutable"
		
		@html path *.html
		header @html Cache-Control "no-cache, no-store, must-revalidate"
		header @html Pragma "no-cache"
		header @html Expires "0"
		
		try_files {path} /index.html
		file_server
	}

	# 安全头
	header {
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		X-XSS-Protection "1; mode=block"
	}

	log {
		output stdout
		format json
	}
}